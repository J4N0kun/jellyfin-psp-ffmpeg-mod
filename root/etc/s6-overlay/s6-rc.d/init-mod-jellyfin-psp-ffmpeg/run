#!/usr/bin/with-contenv bash
# Docker Mod pour Jellyfin PSP - Wrapper FFmpeg MJPEG optimisé

echo "==================================================="
echo "PSP Jellyfin Mod: Installation wrapper FFmpeg"
echo "==================================================="

FFMPEG_ORIGINAL="/usr/lib/jellyfin-ffmpeg/ffmpeg.original"
FFMPEG_WRAPPER="/usr/lib/jellyfin-ffmpeg/ffmpeg"

# Vérifier si le wrapper est déjà installé
if [ -f "$FFMPEG_ORIGINAL" ]; then
    echo "→ Wrapper FFmpeg déjà installé ✅"
    exit 0
fi

# Renommer l'original FFmpeg
echo "→ Sauvegarde de l'original FFmpeg..."
mv "$FFMPEG_WRAPPER" "$FFMPEG_ORIGINAL"

# Créer le wrapper FFmpeg
echo "→ Création du wrapper FFmpeg PSP MJPEG..."
cat > "$FFMPEG_WRAPPER" << 'FFMPEG_WRAPPER'
#!/bin/bash
# Wrapper FFmpeg pour PSP - MJPEG optimisé
# MJPEG = Motion JPEG (succession d'images JPEG)
# Décodage natif PSP, fiable et performant

LOGFILE="/tmp/ffmpeg-psp-wrapper.log"

# Détecter MJPEG
if echo "$@" | grep -q "mjpeg"; then
    echo "========================================" >> "$LOGFILE"
    echo "[$(date)] FFMPEG MJPEG DÉTECTÉ" >> "$LOGFILE"
    echo "COMMANDE ORIGINALE:" >> "$LOGFILE"
    printf '%s\n' "$@" >> "$LOGFILE"
    echo "" >> "$LOGFILE"
    
    # Parser et optimiser pour PSP
    ARGS=()
    SKIP_NEXT=0
    INJECT_AFTER_CODEC=0
    
    i=0
    while [ $i -lt $# ]; do
        i=$((i + 1))
        arg="${!i}"
        
        if [ $SKIP_NEXT -eq 1 ]; then
            SKIP_NEXT=0
            continue
        fi
        
        # Supprimer les options conflictuelles avec -q:v (qualité)
        if [[ "$arg" =~ ^-(preset|crf|force_key_frames|maxrate|bufsize)$ ]] || [[ "$arg" = "-b:v" ]]; then
            echo "  [REMOVE] $arg (conflit avec -q:v)" >> "$LOGFILE"
            SKIP_NEXT=1
            continue
        fi
        
        # Ajouter l'argument
        ARGS+=("$arg")
        
        # Injecter nos options MJPEG APRÈS -c:v mjpeg
        if [[ "$arg" = "mjpeg" ]] && [ $INJECT_AFTER_CODEC -eq 0 ]; then
            echo "  [INJECT] Options MJPEG optimisées PSP" >> "$LOGFILE"
            
            # ===== MJPEG OPTIMISÉ PSP =====
            # Qualité JPEG
            ARGS+=("-q:v" "3")               # Qualité 3 (2-5, plus bas = meilleure qualité)
            ARGS+=("-qmin" "2")              # Quantizer min
            ARGS+=("-qmax" "5")              # Quantizer max
            
            # Framerate (pour avoir un bitrate raisonnable)
            ARGS+=("-r" "12")                # 12 fps (fluide pour PSP)
            
            # Huffman tables optimisées
            ARGS+=("-huffman" "optimal")     # Tables Huffman optimales
            
            # Format de sous-échantillonnage
            ARGS+=("-pix_fmt" "yuvj420p")    # YUV 4:2:0 JPEG standard
            
            # Pas de B-frames (MJPEG n'en a pas)
            ARGS+=("-bf" "0")
            
            INJECT_AFTER_CODEC=1
        fi
    done
    
    echo "COMMANDE MJPEG MODIFIÉE:" >> "$LOGFILE"
    printf '%s ' "${ARGS[@]}" >> "$LOGFILE"
    echo "" >> "$LOGFILE"
    echo "" >> "$LOGFILE"
    
    exec /usr/lib/jellyfin-ffmpeg/ffmpeg.original "${ARGS[@]}"
fi

# Si ce n'est pas MJPEG, passer tel quel
exec /usr/lib/jellyfin-ffmpeg/ffmpeg.original "$@"
FFMPEG_WRAPPER

# Rendre le wrapper exécutable
chmod +x "$FFMPEG_WRAPPER"

echo "→ Wrapper FFmpeg MJPEG installé ✅"
echo "→ Tous les transcodages MJPEG seront optimisés pour PSP !"
echo "==================================================="

